openapi: 3.0.0
info:
  title: API Aupamatch
  description: API para um sistema de AuPair
  version: 1.0.0
servers:
  - url: https://aupamatch-api3.onrender.com/api
  - url: http://localhost:8080/api

securityDefinitions:
  jwt:
    type: apiKey
    name: Authorization
    in: header
    description: JWT authorization token.

paths:
  /auth/signup:
    post:
      summary: Registra um novo usuário
      tags:
      - Auth
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: E-mail do usuário
                password:
                  type: string
                  format: password
                  description: Senha do usuário
                name:
                  type: string
                  description: Nome do usuário
                roles:
                  type: string
                  enum:
                    - user
                    - aupair
                    - family
                    - agency
                  description: Papel do usuário
              required:
                - email
                - password
                - name
                - roles
      responses:
        "200":
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de confirmação
        "400":
          description: Dados inválidos
        "500":
          description: Erro interno do servidor
      security: []
    x-middleware:
      - name: checkDuplicateUsernameOrEmail
        description: Verifica se já existe um usuário com o mesmo e-mail ou nome de usuário
      - name: checkRolesExisted
        description: Verifica se o papel especificado pelo usuário é válido
  /auth/signin:
    post:
      summary: Autentica um usuário
      tags:
      - Auth
      operationId: signin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: E-mail do usuário
                password:
                  type: string
                  format: password
                  description: Senha do usuário
              required:
                - email
                - password
            examples:
              example1:
                value:
                  email: "rafael-aupair@aupair.com"
                  password: "Teste123@"
      responses:
        "200":
          description: Autenticação realizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID do usuário
                  email:
                    type: string
                    format: email
                    description: E-mail do usuário
                  name:
                    type: string
                    description: Nome do usuário
                  roles:
                    type: array
                    items:
                      type: string
                      description: Papel do usuário
                  accessToken:
                    type: string
                    description: Token de acesso para o usuário
                  firstLogin:
                    type: boolean
                    description: Primeiro Login
        "401":
          description: Credenciais inválidas
        "404":
          description: Usuário não encontrado
        "500":
          description: Erro interno do servidor
      security: []
  /userprofile:
    get:
      parameters:
      - name: x-access-token
        in: header
        description: Token de autenticação
        required: true
        type: string
      tags:
        - "User"
      summary: "Get user profile"
      description: "Returns the profile of the user authenticated by the provided JWT token."
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserProfileResponse"
        "401":
          $ref: "#/responses/UnauthorizedError"
        "404":
          $ref: "#/responses/NotFoundError"
    put:
          summary: Update user credentials
          tags:
            - User
          parameters:
          - name: x-access-token
            in: header
            description: Token de autenticação
            required: true
            type: string
          requestBody:
            description: User credentials to be updated
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    password:
                      type: string
                      minLength: 8
                      description: New password for the user
                    name:
                      type: string
                      description: New name for the user
                  example:
                    password: mynewpassword123
                    name: John Smith
          responses:
            200:
              description: Updated user credentials

            400:
              description: Bad request
            401:
              $ref: '#/responses/UnauthorizedError'
            404:
              description: User not found
            500:
              description: Internal server error
  /send-token:
      post:
        tags:
          - "Recuperar senha"
        summary: Envia um e-mail com um código para redefinir a senha.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    description: Endereço de e-mail do usuário.
                required:
                  - email
        responses:
          '200':
            description: E-mail enviado com sucesso.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Mensagem de sucesso.
          '400':
            description: Parâmetros inválidos ou código expirado.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Mensagem de erro.
          '404':
            description: E-mail não encontrado.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Mensagem de erro.
          '500':
            description: Erro interno do servidor.
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: Mensagem de erro.
  /validate-token:
    post:
      tags:
        - "Recuperar senha"
      summary: Verifica se o código de redefinição de senha é válido.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Endereço de e-mail do usuário.
                code:
                  type: string
                  description: Código de redefinição de senha.
              required:
                - email
                - code
      responses:
        '200':
          description: Código válido.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de sucesso.
        '400':
          description: Código inválido ou expirado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de erro.
        '404':
          description: E-mail não encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de erro.
        '500':
          description: Erro interno do servidor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensagem de erro.
  /reset-password:
    patch:
      tags:
        - "Recuperar senha"

      summary: Redefinir a senha de um usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: O email do usuário que deseja redefinir a senha.
                password:
                  type: string
                  description: A nova senha do usuário.
              required:
                - email
                - password
      responses:
        '200':
          description: Senha redefinida com sucesso.
        '400':
          description: Código inválido.
        '404':
          description: Email não encontrado.
        '500':
          description: Erro interno do servidor.
  /vagas:
    get:
      summary: "Listar vagas"
      description: "Lista todas as vagas disponíveis para um usuário específico."
      tags:
        - "Listar Vagas"
      parameters:
      - name: x-access-token
        in: header
        description: Token de autenticação
        required: true
        type: string
      security:
        - jwt: []
      
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                - _id: "640677f8096edf39d8759a09"
                  escolaridade: "Graduação"
                  idiomas: ["Qualquer Idioma"]
                  religiao: "Qualquer Religião"
                  genero: "Qualquer Gênero"
                  nacionalidade: "Qualquer Nacionalidade"
                  faixa_etaria: ["22-30"]
                  experiencia_trabalho: "4-6"
                  quantidade_criancas: "Não especificado"
                  receber_newsletter: true
                  data_disponibilidade: "2023-04-01T00:00:00.000Z"
                  data_finalizacao_vaga: null
                  titulo_vaga: "Au Pair em São Paulo"
                  vaga_patrocinada: false
                  pais: "Brasil"
                  estado_provincia: "São Paulo"
                  descricao: "Cuidar de crianças, ajudar com a rotina escolar e atividades extracurriculares, fazer refeições e atividades recreativas com as crianças"
                  natacao: false
                  habilitacao: true
                  carro_exclusivo: false
                  views: 6
                  isSaved: false
                  user: ["6400075f0e87cc0035ceceeb"]
                  resumo: "Procuramos uma au pair para cuidar de nossos filhos durante a semana"
                  createdAt: "2023-03-06T23:32:08.784Z"
                  updatedAt: "2023-03-07T00:06:26.162Z"
                  __v: 0
                  score: "42%"
        403:
          description: Acesso negado

        404:
          description: Nenhuma vaga encontrada

        500:
          description: Erro ao buscar vagas
  /vaga:
    post:
      tags:
        - "Minhas vagas"
      summary: Cria uma nova vaga
      description: Cria uma nova vaga com base nos parâmetros informados
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Parâmetros para a criação da vaga
          required: true
          schema:
            $ref: '#/definitions/Vaga'
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string
      responses:
        '200':
          description: Vaga criada com sucesso
          schema:
            $ref: '#/definitions/Vaga'
        '400':
          description: Erro na requisição
        '401':
          description: Não autorizado
        '403':
          description: Token não fornecido
      security:
        - JWT: []
  /vaga/{id}:
    delete:
      tags:
        - "Minhas vagas"
      summary: Deletar uma vaga
      description: Deleta uma vaga com base no ID passado como parâmetro
      parameters:
        - name: id
          in: path
          description: ID da vaga a ser deletada
          required: true
          type: string
        - name: x-access-token
          in: header
          description: Token de autenticação JWT
          required: true
          type: string
      responses:
        200:
          description: Vaga deletada com sucesso
          schema:
            type: object
            properties:
              message:
                type: string
                description: Mensagem de sucesso
                example: Vaga deletada com sucesso
        401:
          description: Não autorizado
          schema:
            type: object
            properties:
              message:
                type: string
                description: Mensagem de erro
                example: Unauthorized!
        403:
          description: Sem token fornecido
          schema:
            type: object
            properties:
              message:
                type: string
                description: Mensagem de erro
                example: No token provided!
        404:
          description: Vaga não encontrada
          schema:
            type: object
            properties:
              message:
                type: string
                description: Mensagem de erro
                example: Vaga não encontrada
    put:
      summary: Atualiza uma vaga existente
      tags:
        - "Minhas vagas"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID da vaga a ser atualizada
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string
        - name: body
          in: body
          description: Parâmetros para a alteração da vaga
          required: true
          schema:
            type: object
            properties:
              titulo_vaga:
                type: string
                example: "Novo título para a vaga"
              descricao:
                type: string
                example: "Nova descrição para a vaga"
      responses:
        '200':
          description: Vaga alterada com sucesso
          schema:
            $ref: '#/definitions/Vaga'
        '400':
          description: Erro na requisição
        '401':
          description: Não autorizado
        '403':
          description: Token não fornecido
  /vaga/{id}/toggle:
    put:
      summary: Ativar ou desativar uma vaga.
      tags:
        - Minhas vagas
      security:
        - bearerAuth: []
      parameters:
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string
        - in: path
          name: id
          required: true
          description: ID da vaga a ser ativada/desativada.
          schema:
            type: string
      responses:
        "200":
          description: Vaga ativada/desativada com sucesso.
          content:
            application/json:
              schema:
                $ref: "#/definitions/Vaga"
        '400':
          description: Erro na requisição
        '401':
          description: Não autorizado
        '403':
          description: Token não fornecido
  /login-history:
    get:
      tags:
        - "User"
      summary: Obtém o histórico de login do usuário autenticado
      parameters:
      - name: x-access-token
        in: header
        description: Token de autenticação
        required: true
        type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginHistory'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'

  /perfil:
    parameters:
    - name: x-access-token
      in: header
      description: Token de autenticação
      required: true
      type: string
    security:
      - jwt: []
    post:
      summary: Cria um perfil de Au Pair.
      tags:
      - Perfil
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                telefone:
                  type: string
                cep:
                  type: string
                logradouro:
                  type: string
                numero:
                  type: string
                complemento:
                  type: string
                cidade:
                  type: string
                estado:
                  type: string
                data_de_nascimento:
                  type: string
                  format: date
                escolaridade:
                  type: string
                idiomas:
                  type: array
                  items:
                    type: string
                religiao:
                  type: string
                genero:
                  type: string
                nacionalidade:
                  type: string
                numero_identificacao_nacional:
                  type: string
                tipo_documento:
                  type: string
                habilitacao:
                  type: boolean
                quantidade_criancas:
                  type: string
                experiencia_trabalho:
                  type: string
                natacao:
                  type: boolean
                carro_exclusivo:
                  type: boolean
                receber_newsletter:
                  type: boolean
                data_disponibilidade:
                  type: string
                  format: date
              example:
                telefone: "(11) 1234-5678"
                cep: "01234-567"
                logradouro: "Rua Teste"
                numero: "123"
                complemento: "Apto. 456"
                cidade: "São Paulo"
                estado: "SP"
                data_de_nascimento: "1995-05-02"
                escolaridade: "Ensino Superior Completo"
                idiomas: ["Inglês", "Espanhol"]
                religiao: "Católica"
                genero: "Feminino"
                nacionalidade: "Brasileira"
                numero_identificacao_nacional: "123.456.789-00"
                tipo_documento: "CPF"
                habilitacao: true
                quantidade_criancas: "2"
                experiencia_trabalho: "1"
                natacao: true
                carro_exclusivo: false
                receber_newsletter: true
                data_disponibilidade: "2023-06-01"
      responses:
        '201':
          description: Perfil criado com sucesso
          content:
            application/json:
              example:
                telefone: "(11) 1234-5678"
                cep: "01234-567"
                logradouro: "Rua Teste"
                numero: "123"
                complemento: "Apto. 456"
                cidade: "São Paulo"
                estado: "SP"
                data_de_nascimento: "1995-05-02"
                escolaridade: "Ensino Superior Completo"
                idiomas: ["Inglês", "Espanhol"]
                religiao: "Católica"
                genero: "Feminino"
                nacionalidade: "Brasileira"
                numero_identificacao_nacional: "123.456.789-00"
                tipo_documento: "CPF"
                habilitacao: true
                quantidade_criancas: "2"
                experiencia_trabalho: "1"
                natacao: true
                carro_exclusivo: false
                receber_newsletter: true
                data_disponibilidade: "2023-06-01"
        '400':
          description: Requisição inválida
        '401':
          description: Não autorizado
        '403':
          description: Token não fornecido
        '500':
          description: Erro do servidor
    get:
      summary: Recupera o perfil do Au Pair logado
      tags:
      - Perfil
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Retorna o perfil do Au Pair
          content:
            application/json:
              schema:
                $ref: '#/definitions/Aupair'
        '401':
          description: Não autorizado
        '404':
          description: Perfil não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Perfil não encontrado
                  firstLogin:
                    type: boolean
                    example: true
        '500':
          description: Erro do servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Server Error
    delete:
      summary: Exclui o perfil do usuário logado
      tags:
      - Perfil
      responses:
        '200':
          description: Perfil excluído com sucesso
        '401':
          description: Não autorizado
        '403':
          description: Token não fornecido
        '404':
          description: Perfil não encontrado
      /aupair-profile:
    put:
      summary: Atualiza o perfil da aupair
      description: Atualiza os atributos do perfil da aupair com os valores enviados na requisição
      tags:
      - Perfil
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                telefone:
                  type: string
                cep:
                  type: string
                logradouro:
                  type: string
                numero:
                  type: string
                complemento:
                  type: string
                cidade:
                  type: string
                estado:
                  type: string
                data_de_nascimento:
                  type: string
                  format: date
                escolaridade:
                  type: string
                idiomas:
                  type: array
                  items:
                    type: string
                religiao:
                  type: string
                genero:
                  type: string
                nacionalidade:
                  type: string
                numero_identificacao_nacional:
                  type: string
                tipo_documento:
                  type: string
                habilitacao:
                  type: boolean
                quantidade_criancas:
                  type: string
                experiencia_trabalho:
                  type: string
                natacao:
                  type: boolean
                carro_exclusivo:
                  type: boolean
                receber_newsletter:
                  type: boolean
                data_disponibilidade:
                  type: string
                  format: date
              example:
                telefone: "(11) 1234-5678"
                cep: "01234-567"
                logradouro: "Rua Teste"
                numero: "123"
                complemento: "Apto. 456"
                cidade: "São Paulo"
                estado: "SP"
                data_de_nascimento: "1995-05-02"
                escolaridade: "Ensino Superior Completo"
                idiomas: ["Inglês", "Espanhol"]
                religiao: "Católica"
                genero: "Feminino"
                nacionalidade: "Brasileira"
                numero_identificacao_nacional: "123.456.789-00"
                tipo_documento: "CPF"
                habilitacao: true
                quantidade_criancas: "2"
                experiencia_trabalho: "1"
                natacao: true
                carro_exclusivo: false
                receber_newsletter: true
                data_disponibilidade: "2023-06-01"
      responses:
        200:
          description: Perfil da aupair atualizado com sucesso
        400:
          description: Atributos inválidos na requisição
        403:
          description: Usuário não tem permissão para editar este perfil
        404:
          description: Perfil da aupair não encontrado
        500:
          description: Erro ao atualizar o perfil da aupair
  /favoritar/{id}:
    post:
      summary: Favoritar uma vaga
      tags:
      - Favoritos
      description: >
        Adiciona ou remove a vaga com o ID especificado à lista de vagas favoritas do usuário autenticado.
      operationId: favoritarVaga
      parameters:
        - name: id
          in: path
          description: ID da vaga a ser favoritada
          required: true
          type: string
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string
      responses:
        200:
          description: Vaga favoritada com sucesso
        401:
          description: Token inválido ou expirado
        403:
          description: Token não fornecido
        404:
          description: Vaga não encontrada
        500:
          description: Erro interno do servidor
      security:
        - Bearer: []
  /aupair/vagas-salvas:
    get:
      summary: Lista as vagas salvas por um(a) au pair
      tags:
        - "Favoritos"
      security:
        - bearerAuth: []
      parameters:
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                - _id: "640677f8096edf39d8759a09"
                  escolaridade: "Graduação"
                  idiomas: ["Qualquer Idioma"]
                  religiao: "Qualquer Religião"
                  genero: "Qualquer Gênero"
                  nacionalidade: "Qualquer Nacionalidade"
                  faixa_etaria: ["22-30"]
                  experiencia_trabalho: "4-6"
                  quantidade_criancas: "Não especificado"
                  receber_newsletter: true
                  data_disponibilidade: "2023-04-01T00:00:00.000Z"
                  data_finalizacao_vaga: null
                  titulo_vaga: "Au Pair em São Paulo"
                  vaga_patrocinada: false
                  pais: "Brasil"
                  estado_provincia: "São Paulo"
                  descricao: "Cuidar de crianças, ajudar com a rotina escolar e atividades extracurriculares, fazer refeições e atividades recreativas com as crianças"
                  natacao: false
                  habilitacao: true
                  carro_exclusivo: false
                  views: 6
                  user: ["6400075f0e87cc0035ceceeb"]
                  resumo: "Procuramos uma au pair para cuidar de nossos filhos durante a semana"
                  aupair: []
                  createdAt: "2023-03-06T23:32:08.784Z"
                  updatedAt: "2023-03-07T00:06:26.162Z"
                  __v: 0
                  score: "42%"
        403:
          description: Acesso negado

        404:
          description: Nenhuma vaga encontrada

        500:
          description: Erro ao buscar vagas
  /familia/minhas-vagas:
    get:
      summary: "Retorna todas as vagas criadas pelo usuário atual."
      description: "Lista todas as vagas criadas pelo usuário atual.."
      tags:
        - "Minhas vagas"
      parameters:
      - name: x-access-token
        in: header
        description: Token de autenticação
        required: true
        type: string
      security:
        - jwt: []
      
      responses:
        200:
          description: OK
          content:
            application/json:
              example:
                - _id: "640677f8096edf39d8759a09"
                  escolaridade: "Graduação"
                  idiomas: ["Qualquer Idioma"]
                  religiao: "Qualquer Religião"
                  genero: "Qualquer Gênero"
                  nacionalidade: "Qualquer Nacionalidade"
                  faixa_etaria: ["22-30"]
                  experiencia_trabalho: "4-6"
                  quantidade_criancas: "Não especificado"
                  receber_newsletter: true
                  data_disponibilidade: "2023-04-01T00:00:00.000Z"
                  data_finalizacao_vaga: null
                  titulo_vaga: "Au Pair em São Paulo"
                  vaga_patrocinada: false
                  pais: "Brasil"
                  estado_provincia: "São Paulo"
                  descricao: "Cuidar de crianças, ajudar com a rotina escolar e atividades extracurriculares, fazer refeições e atividades recreativas com as crianças"
                  natacao: false
                  habilitacao: true
                  carro_exclusivo: false
                  views: 6
                  user: ["6400075f0e87cc0035ceceeb"]
                  resumo: "Procuramos uma au pair para cuidar de nossos filhos durante a semana"
                  aupair: []
                  createdAt: "2023-03-06T23:32:08.784Z"
                  updatedAt: "2023-03-07T00:06:26.162Z"
                  __v: 0
                  score: "42%"
        403:
          description: Acesso negado

        404:
          description: Nenhuma vaga encontrada

        500:
          description: Erro ao buscar vagas
  /vagas/{id}:
    get:
      summary: Consultar uma vaga por ID
      tags:
        - "Minhas vagas"
      description: Retorna uma única vaga correspondente ao ID fornecido, desde que a vaga tenha sido criada pelo usuário autenticado
      parameters:
        - in: path
          name: id
          description: ID da vaga a ser consultada
          required: true
          schema:
            type: string
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string
      responses:
        '200':
          description: Vaga encontrada
          content:
            application/json:
              schema:
                $ref: '#/definitions/Vaga'
        '400':
          description: Erro na requisição
        '401':
          description: Não autorizado
        '403':
          description: Token não fornecido
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string       
  /candidatar:
    get:
      summary: Cria uma nova candidatura à vaga
      tags:
        - "Candidaturas"
      description: Cria uma nova candidatura à vaga correspondente ao ID fornecido na query string, desde que a au pair ainda não tenha se candidatado à mesma vaga.
      parameters:
        - name: vagaID
          in: query
          description: ID da vaga
          required: true
          type: string
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string

      responses:
        201:
          description: Candidatura criada com sucesso
        400:
          description: Aupair já se candidatou a essa vaga
        404:
          description: Vaga não encontrada
        500:
          description: Erro interno do servidor
  /minhas-candidaturas:
    get:
      summary: Retorna todas as candidaturas da Aupair
      tags:
        - "Candidaturas"
      description: "Retorna todas as candidaturas da AuPair logada"
      parameters:
        - name: x-access-token
          in: header
          description: Token de autenticação
          required: true
          type: string
      produces:
        - "application/json"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Candidaturas recuperadas com sucesso"
        401:
          $ref: "#/responses/UnauthorizedError"
  /vagas/{id}/candidaturas:
    delete:
      summary: Remove candidatura da Au Pair para uma vaga
      tags:
       - "Candidaturas"
      parameters:
        - in: path
          name: id
          description: ID da vaga
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          description: Token de autorização JWT
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Candidatura removida com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        param:
                          type: string
                        msg:
                          type: string
                        value:
                          type: string
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Vaga ou candidatura não encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

definitions:
  Vaga:
    type: object
    properties:
      _id:
        type: string
      escolaridade:
        type: string
        enum:
          - Qualquer Escolaridade
          - Ensino Médio
          - Graduação
          - Pós-Graduação
        default: Qualquer Escolaridade
      idiomas:
        type: array
        items:
          type: string
        enum:
          - Qualquer Idioma
          - Inglês
          - Espanhol
          - Francês
          - Alemão
          - Italiano
          - Português
        default:
          - Qualquer Idioma
      religiao:
        type: string
        enum:
          - Qualquer Religião
          - Cristianismo
          - Islamismo
          - Judaísmo
          - Budismo
        default: Qualquer Religião
      genero:
        type: string
        enum:
          - Qualquer Gênero
          - Masculino
          - Feminino
        default: Qualquer Gênero
      nacionalidade:
        type: string
        enum:
          - Qualquer Nacionalidade
          - Brasileira
          - Americana
          - Espanhola
          - Portuguesa
          - Alemã
          - Argentina
          - Chinesa
          - Japonesa
        default: Qualquer Nacionalidade
      faixa_etaria:
        type: array
        items:
          type: string
        enum:
          - Qualquer Idade
          - '18-21'
          - '22-30'
          - '31-40'
          - '41-50'
          - '51+'
        default:
          - Qualquer Idade
      experiencia_trabalho:
        type: string
        enum:
          - 0
          - 1-3
          - 4-6
          - 7-10
          - 10+
        default: 0
      quantidade_criancas:
        type: string
        enum:
          - Não especificado
          - 1
          - 2
          - 3 ou mais
        default: Não especificado
      numero_identificacao_nacional:
        type: string
      resumo:
        type: string
      receber_newsletter:
        type: boolean
        default: false
      data_disponibilidade:
        type: string
        format: date-time
        default: null
      data_finalizacao_vaga:
        type: string
        format: date-time
        default: null
      titulo_vaga:
        type: string
        default: Vaga sem título
      vaga_patrocinada:
        type: boolean
        default: false
      pais:
        type: string
        default: ''
      estado_provincia:
        type: string
        default: ''
      descricao:
        type: string
        default: ''
  
  Aupair:
    type: object
    properties:
      firstLogin:
        type: string
        default: false
      telefone:
        type: string
      cep:
        type: string
      logradouro:
        type: string
      numero:
        type: string
      complemento:
        type: string
      cidade:
        type: string
      estado:
        type: string
      data_de_nascimento:
        type: string
        format: date
      escolaridade:
        type: string
        enum: ['Ensino Médio', 'Graduação', 'Pós-Graduação']
      idiomas:
        type: string
        enum: ['Inglês', 'Espanhol', 'Francês', 'Alemão', 'Italiano', 'Português', 'Outro']
      religiao:
        type: string
        enum: ['Cristianismo', 'Islamismo', 'Judaísmo', 'Budismo', 'Outra']
      genero:
        type: string
        enum: ['Masculino', 'Feminino', 'Outro']
      nacionalidade:
        type: string
        enum: ['Brasileira', 'Americana', 'Espanhola', 'Portuguesa', 'Outra']
      habilitacao:
        type: boolean
      quantidade_criancas:
        type: string
        enum: ['Não especificado', '1', '2', '3 ou mais']
        default: 'Não especificado'
      experiencia_trabalho:
        type: string
        enum: ['0', '1-3', '4-6', '7-10', '10+']
        default: '0'
      natacao:
        type: boolean
      carro_exclusivo:
        type: boolean
      receber_newsletter:
        type: boolean
      data_disponibilidade:
        type: string
        format: date
      numero_identificacao_nacional:
        type: string
      resumo:
        type: string
      habilitacao_pid:
        type: string

  UserProfileResponse:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
        description: "User ID"
      email:
        type: "string"
        description: "User email"
      name:
        type: "string"
        description: "User name"
      roles:
        type: "array"
        items:
          type: "string"
          description: "User roles"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
        description: "Error message"
  UnauthorizedError:
    description: "Unauthorized Error"
    schema:
      $ref: "#/definitions/Error"
  NotFoundError:
    description: "Not Found Error"
    schema:
      $ref: "#/definitions/Error"
components:
  schemas:
    UserProfile:
      type: object
      properties:
        _id:
          type: string
          description: The user ID
        name:
          type: string
          description: The user name
        email:
          type: string
          description: The user email
      required:
        - _id
        - name
        - email

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: The error message
      required:
        - message[]
    LoginHistory:
      type: object
      properties:
        _id:
          type: string
        date:
          type: string
          format: date-time
        ipAddress:
          type: string
        location:
          type: string
      required:
        - date
        - ipAddress
        - location
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    Unauthorized:
      description: Não autorizado
    InternalServerError:
      description: Erro interno do servidor

responses:
  UnauthorizedError:
    description: Usuário não autorizado a realizar a ação solicitada
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
              example: "Não autorizado"

  NotFoundError:
    description: Recurso solicitado não foi encontrado
    content:
      application/json:
        schema:
          type: object
          properties:
            message:
              type: string
              example: "Recurso não encontrado"